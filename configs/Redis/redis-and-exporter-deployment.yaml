# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: redis
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: redis
#   name: redis
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis
#   template:
#     metadata:
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "9121"
#       labels:
#         app: redis
#     spec:
#       containers:
#       - name: redis
#         image: redis:4
#         resources:
#           requests:
#             cpu: 100m
#             memory: 100Mi
#         ports:
#         - containerPort: 6379
#       - name: redis-exporter
#         image: oliver006/redis_exporter:latest
#         securityContext:
#           runAsUser: 59000
#           runAsGroup: 59000
#           allowPrivilegeEscalation: false
#           capabilities:
#             drop:
#             - ALL
#         resources:
#           requests:
#             cpu: 100m
#             memory: 100Mi
#         ports:
#         - containerPort: 9121




apiVersion: apps/v1

kind: StatefulSet

metadata:

 name: web

spec:

 serviceName: "redis"

 replicas: 2

 selector:

   matchLabels:

     app: redis

 template:

   metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"

      labels:

        app: redis

   spec:

     containers:

     - name: redis

       image: redis:latest

       ports:

       - containerPort: 6379

         name: redis-port

       volumeMounts:

       - name: data

         mountPath: /data
     - name: redis-exporter

       image: oliver006/redis_exporter

       ports:

       - containerPort: 9121

         name: exporter-port

       volumeMounts:

       - name: data

         mountPath: /data

 volumeClaimTemplates:

 - metadata:

     name: data

   spec:

     accessModes: [ "ReadWriteOnce" ]

     resources:

       requests:

         storage: 1Gi



